upstream backend_upstream {
  server api:5050;
}

server {
  listen 9999 default_server;
  server_name  _;

  server_tokens off;
  gzip on;
  gzip_proxied any;
  gzip_comp_level 4;
  gzip_types text/css application/javascript image/svg+xml;
 
  location /api {

     if ($http_origin ~* "^https?://(localhost:8080)$") {
        # add_header Access-Control-Allow-Origin "$http_origin"; # cannot be set because it doesn't override nodejs header
        add_header Content-Security-Policy "connect-src 'self' $http_origin;";
     }

      add_header Access-Control-Allow-Origin "*"; # must be consistent with setting with nodejs cors if set on that end
      add_header X-debug-message "/api proxy to api:5050 from localhost9999 in /devops/nginx.conf" always;
      add_header Access-Control-Allow-Methods *;  # Allow all methods
      add_header Access-Control-Allow-Headers "*"; # Allow all headers
      add_header Access-Control-Allow-Credentials "true";

      add_header X-debug-SERVER "container-serice: nginx" always;
      add_header X-debug-CORS "Origin: $http_origin" always;
      add_header X-debug-IP "Server IP: $server_addr" always;
      # proxy_set_header X-Frame-Options "SAMEORIGIN"; # dont need for cors, this is for embedding and clickhijackign settings
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_pass http://backend_upstream;
  }

  location / {
	add_header X-debug-message "/ from localhost9999 devops/nginx.conf" always;
	add_header X-debug-SERVER "container-serice: nginx" always;
	add_header X-debug-CORS "Origin: $http_origin" always;
	add_header X-debug-IP "Server IP: $server_addr" always;
  	root /usr/share/nginx/html;
	try_files $uri $uri/ /index.html;
  }

}
